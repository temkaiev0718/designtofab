{%- liquid
  assign color_scheme = section.settings.color_scheme
  assign text_position = section.settings.text_position | default: 'center'
  assign content_width = section.settings.content_width | default: 'lg'
-%}

<section class="dac-timezone-section">
  <div class="container {{ content_width }}">
    {%- if section.settings.heading != blank -%}
      <div class="timezone-header text-{{ text_position }}">
        <div class="timezone-title {{ section.settings.heading_tag }}">
          {{ section.settings.heading }}
        </div>
        {%- if section.settings.description != blank -%}
          <p class="timezone-description">{{ section.settings.description }}</p>
        {%- endif -%}
      </div>
    {%- endif -%}

    <div class="timezone-content">
      <!-- Live Clock Display -->
      <div class="timezone-clocks">
        <div class="timezone-clock local-time">
          <h3>Your Local Time</h3>
          <div class="clock-display" id="local-clock">
            <span class="time">--:--</span>
            <span class="date">---</span>
            <span class="timezone-name">--</span>
          </div>
        </div>
        
        <div class="timezone-connector">
          <div class="connector-line"></div>
          <span class="connector-text">vs</span>
        </div>
        
        <div class="timezone-clock sydney-time">
          <h3>Sydney Time</h3>
          <div class="clock-display" id="sydney-clock">
            <span class="time">--:--</span>
            <span class="date">---</span>
            <span class="timezone-name">AEDT/AEST</span>
          </div>
        </div>
      </div>

      <!-- Working Hours Comparison -->
      <div class="working-hours-comparison">
        <div class="h3">Working Hours Comparison</div>
        <p class="comparison-note">Typical business hours (9 AM - 5 PM) highlighted in both timezones</p>
        
        <div class="timeline-container">
          <div class="timeline-row local-timeline">
            <div class="timeline-label">
              <span class="location-name">Your Location</span>
              <span class="current-time" id="local-current-indicator"></span>
            </div>
            <div class="timeline-hours" id="local-timeline">
              <!-- Hours will be generated by JavaScript -->
            </div>
          </div>
          
          <div class="timeline-row sydney-timeline">
            <div class="timeline-label">
              <span class="location-name">Sydney</span>
              <span class="current-time" id="sydney-current-indicator"></span>
            </div>
            <div class="timeline-hours" id="sydney-timeline">
              <!-- Hours will be generated by JavaScript -->
            </div>
          </div>
        </div>
      </div>

      <!-- Time Difference Info -->
      <div class="time-difference-info">
        <div class="difference-display">
          <span class="difference-label">Time Difference:</span>
          <span class="difference-value" id="time-difference">Calculating...</span>
        </div>
        <div class="best-call-time">
          <span class="best-time-label">Best time to call Sydney:</span>
          <span class="best-time-value" id="best-call-time">Calculating...</span>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
.dac-timezone-section {
  padding: 4rem 0;
  background: {{ section.settings.background_color | default: '#f8f9fa' }};
}

.timezone-header {
  margin-bottom: 3rem;
}

.timezone-title {
  font-weight: 700;
  color: {{ section.settings.text_color | default: '#1a1a1a' }};
  margin-bottom: 1rem;
}

.timezone-description {
  color: {{ section.settings.text_color | default: '#666' }};
  margin-bottom: 0;
}

.timezone-content {
  max-width: 1200px;
  margin: 0 auto;
}

/* Live Clocks */
.timezone-clocks {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 4rem;
  gap: 2rem;
}

.timezone-clock {
  flex: 1;
  text-align: center;
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.1);
}

.timezone-clock h3 {
  margin-bottom: 1rem;
  color: #333;
  font-size: 1.2rem;
}

.clock-display .time {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  color: #2563eb;
  margin-bottom: 0.5rem;
}

.clock-display .date {
  display: block;
  font-size: 1.1rem;
  color: #666;
  margin-bottom: 0.25rem;
}

.clock-display .timezone-name {
  display: block;
  font-size: 0.9rem;
  color: #888;
}

.timezone-connector {
  flex: 0 0 100px;
  position: relative;
  text-align: center;
}

.connector-line {
  height: 2px;
  background: linear-gradient(to right, #2563eb, #7c3aed);
  margin: 1rem 0;
}

.connector-text {
  background: white;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  color: #666;
  font-weight: 600;
  border: 2px solid #e5e7eb;
}

/* Working Hours Timeline */
.working-hours-comparison {
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  margin-bottom: 2rem;
}

.working-hours-comparison .h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.comparison-note {
  color: #666;
  margin-bottom: 2rem;
  font-size: 0.95rem;
}

.timeline-container {
  overflow-x: auto;
}

.timeline-row {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}

.timeline-label {
  flex: 0 0 150px;
  text-align: right;
  padding-right: 1rem;
}

.location-name {
  display: block;
  font-weight: 600;
  color: #333;
  margin-bottom: 0.25rem;
}

.current-time {
  display: block;
  font-size: 0.85rem;
  color: #2563eb;
  font-weight: 500;
}

.timeline-hours {
  display: flex;
  flex: 1;
  min-width: 600px;
}

.hour-block {
  flex: 1;
  min-width: 25px;
  height: 40px;
  border: 1px solid #e5e7eb;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  color: #666;
}

.hour-block.working-hours {
  background: rgba(37, 99, 235, 0.1);
  border-color: #2563eb;
  color: #2563eb;
}

.hour-block.current-hour {
  background: #ef4444;
  color: white;
  font-weight: 600;
}

.hour-block:first-child {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}

.hour-block:last-child {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
}

/* Time Difference Info */
.time-difference-info {
  display: flex;
  justify-content: space-between;
  gap: 2rem;
  flex-wrap: wrap;
}

.difference-display,
.best-call-time {
  background: white;
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  flex: 1;
  min-width: 250px;
  text-align: center;
}

.difference-label,
.best-time-label {
  display: block;
  color: #666;
  margin-bottom: 0.5rem;
  font-size: 0.95rem;
}

.difference-value,
.best-time-value {
  display: block;
  color: #2563eb;
  font-size: 1.2rem;
  font-weight: 600;
}

/* Responsive Design */
@media (max-width: 768px) {
  .timezone-clocks {
    flex-direction: column;
    gap: 1rem;
  }
  
  .timezone-connector {
    transform: rotate(90deg);
    flex: 0 0 40px;
  }
  
  .timeline-row {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .timeline-label {
    text-align: left;
    padding-right: 0;
    margin-bottom: 0.5rem;
  }
  
  .time-difference-info {
    flex-direction: column;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Timezone functionality
  const sydneyTimezone = 'Australia/Sydney';
  
  function getUserTimezone() {
    return Intl.DateTimeFormat().resolvedOptions().timeZone;
  }
  
  function formatTime(date, timezone) {
    return new Intl.DateTimeFormat('en-US', {
      timeZone: timezone,
      hour: '2-digit',
      minute: '2-digit',
      hour12: true
    }).format(date);
  }
  
  function formatDate(date, timezone) {
    return new Intl.DateTimeFormat('en-US', {
      timeZone: timezone,
      weekday: 'long',
      month: 'short',
      day: 'numeric'
    }).format(date);
  }
  
  function getTimezoneOffset(timezone) {
    const now = new Date();
    const utc = new Date(now.getTime() + (now.getTimezoneOffset() * 60000));
    const targetTime = new Date(utc.toLocaleString('en-US', { timeZone: timezone }));
    return Math.round((targetTime - utc) / (1000 * 60 * 60));
  }
  
  function updateClocks() {
    const now = new Date();
    const userTimezone = getUserTimezone();
    
    // Update local time
    const localClock = document.getElementById('local-clock');
    if (localClock) {
      localClock.querySelector('.time').textContent = formatTime(now, userTimezone);
      localClock.querySelector('.date').textContent = formatDate(now, userTimezone);
      localClock.querySelector('.timezone-name').textContent = userTimezone.split('/').pop().replace('_', ' ');
    }
    
    // Update Sydney time
    const sydneyClock = document.getElementById('sydney-clock');
    if (sydneyClock) {
      sydneyClock.querySelector('.time').textContent = formatTime(now, sydneyTimezone);
      sydneyClock.querySelector('.date').textContent = formatDate(now, sydneyTimezone);
    }
    
    // Update time difference
    const localOffset = getTimezoneOffset(userTimezone);
    const sydneyOffset = getTimezoneOffset(sydneyTimezone);
    const difference = sydneyOffset - localOffset;
    
    const diffElement = document.getElementById('time-difference');
    if (diffElement) {
      if (difference > 0) {
        diffElement.textContent = `Sydney is ${difference} hours ahead`;
      } else if (difference < 0) {
        diffElement.textContent = `Sydney is ${Math.abs(difference)} hours behind`;
      } else {
        diffElement.textContent = 'Same timezone';
      }
    }
    
    // Calculate best calling time
    const bestTimeElement = document.getElementById('best-call-time');
    if (bestTimeElement) {
      let bestTime = '';
      if (Math.abs(difference) <= 3) {
        bestTime = 'Anytime during business hours';
      } else if (difference > 0) {
        bestTime = 'Early morning your time (7-9 AM)';
      } else {
        bestTime = 'Evening your time (6-8 PM)';
      }
      bestTimeElement.textContent = bestTime;
    }
    
    updateTimelines(now, userTimezone);
  }
  
  function updateTimelines(now, userTimezone) {
    const localTimeline = document.getElementById('local-timeline');
    const sydneyTimeline = document.getElementById('sydney-timeline');
    
    if (!localTimeline || !sydneyTimeline) return;
    
    // Clear existing content
    localTimeline.innerHTML = '';
    sydneyTimeline.innerHTML = '';
    
    // Generate 24 hours for each timezone
    for (let hour = 0; hour < 24; hour++) {
      // Local timeline
      const localBlock = document.createElement('div');
      localBlock.className = 'hour-block';
      
      const localHour = new Date(now);
      localHour.setHours(hour, 0, 0, 0);
      const localHourIn12 = localHour.toLocaleString('en-US', {
        timeZone: userTimezone,
        hour: 'numeric',
        hour12: true
      }).replace(' ', '');
      
      localBlock.textContent = localHourIn12;
      
      // Highlight working hours (9 AM - 5 PM)
      if (hour >= 9 && hour < 17) {
        localBlock.classList.add('working-hours');
      }
      
      // Highlight current hour
      const currentLocalHour = parseInt(now.toLocaleString('en-US', {
        timeZone: userTimezone,
        hour: 'numeric',
        hour12: false
      }));
      if (hour === currentLocalHour) {
        localBlock.classList.add('current-hour');
      }
      
      localTimeline.appendChild(localBlock);
      
      // Sydney timeline
      const sydneyBlock = document.createElement('div');
      sydneyBlock.className = 'hour-block';
      
      const sydneyHour = new Date(now);
      sydneyHour.setHours(hour, 0, 0, 0);
      const sydneyHourIn12 = sydneyHour.toLocaleString('en-US', {
        timeZone: sydneyTimezone,
        hour: 'numeric',
        hour12: true
      }).replace(' ', '');
      
      sydneyBlock.textContent = sydneyHourIn12;
      
      // Highlight working hours (9 AM - 5 PM)
      if (hour >= 9 && hour < 17) {
        sydneyBlock.classList.add('working-hours');
      }
      
      // Highlight current hour in Sydney
      const currentSydneyHour = parseInt(now.toLocaleString('en-US', {
        timeZone: sydneyTimezone,
        hour: 'numeric',
        hour12: false
      }));
      if (hour === currentSydneyHour) {
        sydneyBlock.classList.add('current-hour');
      }
      
      sydneyTimeline.appendChild(sydneyBlock);
    }
    
    // Update current time indicators
    const localIndicator = document.getElementById('local-current-indicator');
    const sydneyIndicator = document.getElementById('sydney-current-indicator');
    
    if (localIndicator) {
      localIndicator.textContent = formatTime(now, userTimezone);
    }
    
    if (sydneyIndicator) {
      sydneyIndicator.textContent = formatTime(now, sydneyTimezone);
    }
  }
  
  // Initial update
  updateClocks();
  
  // Update every minute
  setInterval(updateClocks, 60000);
});
</script>

{% schema %}
{
  "name": "Timezone Comparison (DAC)",
  "tag": "section",
  "class": "spaced-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Schedule a Call - Timezone Comparison"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "label": "Heading tag",
      "options": [
        { "value": "h1", "label": "H1" },
        { "value": "h2", "label": "H2" },
        { "value": "h3", "label": "H3" },
        { "value": "h4", "label": "H4" }
      ],
      "default": "h3"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Compare your local time with Sydney time to find the perfect time for our call."
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text alignment",
      "options": [
        { "value": "start", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "end", "label": "Right" }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "content_width",
      "label": "Content width",
      "options": [
        { "value": "sm", "label": "Small" },
        { "value": "lg", "label": "Large" },
        { "value": "xl", "label": "Extra large" },
        { "value": "max-page", "label": "Full page" }
      ],
      "default": "lg"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#1a1a1a"
    }
  ],
  "presets": [
    {
      "name": "Timezone Comparison (DAC)",
      "category": "DAC Sections"
    }
  ]
}
{% endschema %}
